
// This file has been generated by the GUI designer. Do not modify.
namespace FSpot.Tools.ExternalDeveloper
{
	public partial class ExternalDeveloperConfigurationDialog
	{
		private global::Gtk.Table table;
		private global::Gtk.ComboBox developer;
		private global::Gtk.Label developerLabel;
		private global::Gtk.HScale quality;
		private global::Gtk.Label qualityLabel;
		private global::Gtk.ComboBox versionBehaviour;
		private global::Gtk.Label versionLabel;
		private global::Gtk.HBox warningBox;
		private global::Gtk.Image warningIcon;
		private global::Gtk.Label warning;
		private global::Gtk.Button buttonCancel;
		private global::Gtk.Button buttonOk;
		
		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget FSpot.Tools.ExternalDeveloper.ExternalDeveloperConfigurationDialog
			this.CanDefault = true;
			this.Name = "FSpot.Tools.ExternalDeveloper.ExternalDeveloperConfigurationDialog";
			this.Title = global::Mono.Unix.Catalog.GetString ("External developer configuration");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			// Internal child FSpot.Tools.ExternalDeveloper.ExternalDeveloperConfigurationDialog.VBox
			global::Gtk.VBox w1 = this.VBox;
			w1.Name = "vBox";
			w1.BorderWidth = ((uint)(6));
			// Container child vBox.Gtk.Box+BoxChild
			this.table = new global::Gtk.Table (((uint)(5)), ((uint)(2)), false);
			this.table.Name = "table";
			this.table.RowSpacing = ((uint)(6));
			this.table.ColumnSpacing = ((uint)(6));
			this.table.BorderWidth = ((uint)(4));
			// Container child table.Gtk.Table+TableChild
			this.developer = global::Gtk.ComboBox.NewText ();
			this.developer.Name = "developer";
			this.table.Add (this.developer);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table [this.developer]));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(2));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.developerLabel = new global::Gtk.Label ();
			this.developerLabel.Name = "developerLabel";
			this.developerLabel.Xalign = 1F;
			this.developerLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Preferred developer:");
			this.table.Add (this.developerLabel);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table [this.developerLabel]));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.quality = new global::Gtk.HScale (null);
			this.quality.CanFocus = true;
			this.quality.Name = "quality";
			this.quality.Adjustment.Lower = 50;
			this.quality.Adjustment.Upper = 100;
			this.quality.Adjustment.PageIncrement = 10;
			this.quality.Adjustment.StepIncrement = 1;
			this.quality.Adjustment.Value = 85;
			this.quality.DrawValue = true;
			this.quality.Digits = 0;
			this.quality.ValuePos = ((global::Gtk.PositionType)(2));
			this.table.Add (this.quality);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table [this.quality]));
			w4.TopAttach = ((uint)(1));
			w4.BottomAttach = ((uint)(2));
			w4.LeftAttach = ((uint)(1));
			w4.RightAttach = ((uint)(2));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.qualityLabel = new global::Gtk.Label ();
			this.qualityLabel.Name = "qualityLabel";
			this.qualityLabel.Xalign = 1F;
			this.qualityLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("JPEG quality:");
			this.table.Add (this.qualityLabel);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table [this.qualityLabel]));
			w5.TopAttach = ((uint)(1));
			w5.BottomAttach = ((uint)(2));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.versionBehaviour = global::Gtk.ComboBox.NewText ();
			this.versionBehaviour.AppendText (global::Mono.Unix.Catalog.GetString ("Create a new version"));
			this.versionBehaviour.AppendText (global::Mono.Unix.Catalog.GetString ("Overwrite the existing one"));
			this.versionBehaviour.AppendText (global::Mono.Unix.Catalog.GetString ("Always ask"));
			this.versionBehaviour.Name = "versionBehaviour";
			this.versionBehaviour.Active = 0;
			this.table.Add (this.versionBehaviour);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table [this.versionBehaviour]));
			w6.TopAttach = ((uint)(2));
			w6.BottomAttach = ((uint)(3));
			w6.LeftAttach = ((uint)(1));
			w6.RightAttach = ((uint)(2));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.versionLabel = new global::Gtk.Label ();
			this.versionLabel.Name = "versionLabel";
			this.versionLabel.Xalign = 1F;
			this.versionLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("When re-editing:");
			this.table.Add (this.versionLabel);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table [this.versionLabel]));
			w7.TopAttach = ((uint)(2));
			w7.BottomAttach = ((uint)(3));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.warningBox = new global::Gtk.HBox ();
			this.warningBox.Name = "warningBox";
			this.warningBox.Spacing = 6;
			// Container child warningBox.Gtk.Box+BoxChild
			this.warningIcon = new global::Gtk.Image ();
			this.warningIcon.Name = "warningIcon";
			this.warningIcon.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-dialog-warning", global::Gtk.IconSize.Menu);
			this.warningBox.Add (this.warningIcon);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.warningBox [this.warningIcon]));
			w8.Position = 0;
			w8.Expand = false;
			w8.Fill = false;
			// Container child warningBox.Gtk.Box+BoxChild
			this.warning = new global::Gtk.Label ();
			this.warning.Name = "warning";
			this.warning.Xalign = 0F;
			this.warning.LabelProp = global::Mono.Unix.Catalog.GetString ("warning");
			this.warning.UseMarkup = true;
			this.warningBox.Add (this.warning);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.warningBox [this.warning]));
			w9.Position = 1;
			w9.Expand = false;
			w9.Fill = false;
			this.table.Add (this.warningBox);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.table [this.warningBox]));
			w10.TopAttach = ((uint)(4));
			w10.BottomAttach = ((uint)(5));
			w10.RightAttach = ((uint)(2));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			w1.Add (this.table);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(w1 [this.table]));
			w11.Position = 0;
			w11.Padding = ((uint)(4));
			// Internal child FSpot.Tools.ExternalDeveloper.ExternalDeveloperConfigurationDialog.ActionArea
			global::Gtk.HButtonBox w12 = this.ActionArea;
			w12.Name = "actionArea";
			w12.Spacing = 10;
			w12.BorderWidth = ((uint)(4));
			w12.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child actionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonCancel = new global::Gtk.Button ();
			this.buttonCancel.CanDefault = true;
			this.buttonCancel.CanFocus = true;
			this.buttonCancel.Name = "buttonCancel";
			this.buttonCancel.UseStock = true;
			this.buttonCancel.UseUnderline = true;
			this.buttonCancel.Label = "gtk-cancel";
			this.AddActionWidget (this.buttonCancel, -6);
			global::Gtk.ButtonBox.ButtonBoxChild w13 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w12 [this.buttonCancel]));
			w13.Expand = false;
			w13.Fill = false;
			// Container child actionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonOk = new global::Gtk.Button ();
			this.buttonOk.CanDefault = true;
			this.buttonOk.CanFocus = true;
			this.buttonOk.Name = "buttonOk";
			this.buttonOk.UseStock = true;
			this.buttonOk.UseUnderline = true;
			this.buttonOk.Label = "gtk-ok";
			this.AddActionWidget (this.buttonOk, -5);
			global::Gtk.ButtonBox.ButtonBoxChild w14 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w12 [this.buttonOk]));
			w14.Position = 1;
			w14.Expand = false;
			w14.Fill = false;
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 400;
			this.DefaultHeight = 300;
			this.warningBox.Hide ();
			this.HasDefault = true;
			this.Show ();
		}
	}
}
